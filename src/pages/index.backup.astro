---
import Layout from '../components/Layout.astro';
import LocalBusiness from '../components/Schema/LocalBusiness.astro';
import FAQBlock from '../components/Schema/FAQPage.astro';

const biz = {
  name: 'Roost Property Management, LLC',
  url: 'https://www.roostpm.com',
  telephone: '(410) 555-1212',
  address: {
    streetAddress: '123 Main St Suite 200',
    addressLocality: 'Annapolis',
    addressRegion: 'MD',
    postalCode: '21401',
    addressCountry: 'US',
  },
  areaServed: ['Anne Arundel County', 'Severna Park', 'Annapolis', 'Glen Burnie'],
  sameAs: ['https://www.google.com/maps', 'https://www.facebook.com/roostpm'],
};

const faqs = [
  { question: 'What areas do you serve?', answer: 'Primarily Anne Arundel County with service across nearby Maryland counties.' },
  { question: 'What services do you offer?', answer: 'Full-service property management, tenant placement, and leasing.' },
];

const jsonLd = [];
---
<Layout title="Roost Property Management" description="Property management in Anne Arundel County & surrounding areas." {jsonLd}>
  <h1>Property Management in Anne Arundel County</h1>
  <p><strong>Quick answer:</strong> We help owners maximize rental income and reduce headaches—full management, leasing-only, and tenant placement.</p>

  <ul>
    <li><a href="/services/property-management">Property Management</a></li>
    <li><a href="/service-areas/anne-arundel/annapolis">Annapolis</a> · Severna Park · Glen Burnie</li>
  </ul>

  <LocalBusiness data={biz} />
  <FAQBlock faqs={faqs} />
</Layout>

<!-- ---------- Lead Form (Step 9.5) ---------- -->
<form id="leadForm" class="mt-8 space-y-2">
  <input name="name" placeholder="Your name" required class="border p-2 rounded w-full" />
  <input name="email" type="email" placeholder="Email" class="border p-2 rounded w-full" />
  <input name="phone" placeholder="Phone" class="border p-2 rounded w-full" />
  <textarea name="message" placeholder="Tell us about your property" class="border p-2 rounded w-full"></textarea>
  <input name="_hp" style="display:none" tabindex="-1" autocomplete="off" />
  <button class="px-4 py-2 rounded bg-black text-white">Send</button>
</form>

<script>
document.getElementById('leadForm')?.addEventListener('submit', async (e) => {
  e.preventDefault();
  const fd = new FormData(e.target);
  const payload = Object.fromEntries(fd.entries());
  const res = await fetch('http://127.0.0.1:8788/api/lead', {
    method: 'POST',
    headers: { 'content-type': 'application/json' },
    body: JSON.stringify(payload)
  });
  const json = await res.json();
  alert(json.ok ? 'Thanks! We will reach out.' : (json.error || 'Something went wrong.'));
});
</script>
<script>
  (function () {
    const API_URL =
      (typeof window !== 'undefined' && window.location && window.location.port === '4321')
        ? 'http://127.0.0.1:8788http://127.0.0.1:8788/api/lead'   // dev: hit Wrangler
        : 'http://127.0.0.1:8788/api/lead';                        // prod: same origin

    document.getElementById('leadForm')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const fd = new FormData(e.target);
      const payload = Object.fromEntries(fd.entries());
      const res = await fetch(API_URL, {
        method: 'POST',
        headers: { 'content-type': 'application/json' },
        body: JSON.stringify(payload)
      });
      const json = await res.json();
      alert(json.ok ? 'Thanks! We will reach out.' : (json.error || 'Something went wrong.'));
    });
  })();
</script>
<script type="module">
(() => {
  const form = document.getElementById("leadForm");
  if (!form) return;

  const API = (location.port === '4321' || location.hostname === 'localhost')
    ? 'http://127.0.0.1:8788/api/lead'
    : '/api/lead';

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const data = Object.fromEntries(new FormData(form).entries());
    try {
      const res = await fetch(API, {
        method: "POST",
        headers: { "content-type": "application/json" },
        body: JSON.stringify(data)
      });
      const json = await res.json();
      alert(json.ok ? "Thanks! We will reach out." : (json.error || "Something went wrong."));
    } catch {
      alert("Network error.");
    }
  });
})();
</script>
